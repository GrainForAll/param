<?php

/**
 * Set a param.
 * @param custom key
 * @param custom value
 */
function param_set($key, $value) {
  try {
    db_merge('param')
      ->key(array('name' => $key))
      ->fields(array('value' => serialize($value)))
      ->execute();
  } catch (Exception $e) {
    watchdog('param', "Exception thrown in param.module: " . $e->getMessage(), array(), WATCHDOG_CRITICAL);

    if (user_access('administer param')) {
      drupal_set_message($e->getMessage(), 'error');
    }
  }

  return;
}

/**
 * Get a param.
 * @param custom key
 * @return the custom value on success or FALSE on failure
 */
function param_get($key) {
  $value = db_select('param')
    ->fields('param', array('value'))
    ->condition('name', $key)
    ->range(0, 1)
    ->execute()
    ->fetchField();

  return unserialize($value);
}

/**
 * Implements hook_permission().
 */
function param_permission() {
  return array(
    'administer param' =>  array(
      'title' => t('Administer Param'),
      'description' => t('Administer the Param module'),
    ),
  );
}
